//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Person_AccountType", "AccountType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBLayer.AccountType), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Person), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_AdvertFeatureRelation_Feature", "Feature", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBLayer.Feature), "AdvertFeatureRelation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.AdvertFeatureRelation), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Town_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBLayer.City), "Town", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Town), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_District_Town", "Town", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBLayer.Town), "District", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.District), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Feature_FeatureType", "FeatureType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBLayer.FeatureType), "Feature", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Feature), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_EstateType_EstateType", "EstateType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBLayer.EstateType), "EstateType1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.EstateType), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Advert_AdvertType", "AdvertType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBLayer.AdvertType), "Advert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Advert), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Advert_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBLayer.Currency), "Advert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Advert), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Advert_Currency1", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBLayer.Currency), "Advert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Advert), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Advert_District", "District", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBLayer.District), "Advert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Advert), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Advert_EstateType", "EstateType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBLayer.EstateType), "Advert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Advert), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Advert_Floor", "Floor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBLayer.Floor), "Advert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Advert), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Advert_HeatingType", "HeatingType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBLayer.HeatingType), "Advert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Advert), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Advert_MarketingType", "MarketingType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBLayer.MarketingType), "Advert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Advert), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Advert_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBLayer.Person), "Advert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Advert), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Advert_RoomHall", "RoomHall", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBLayer.RoomHall), "Advert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Advert), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_AdvertFeatureRelation_Advert", "Advert", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBLayer.Advert), "AdvertFeatureRelation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.AdvertFeatureRelation), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_AdvertPhoto_Advert", "Advert", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBLayer.Advert), "AdvertPhoto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.AdvertPhoto), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Advert_AdvertOwnerType", "AdvertOwnerType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBLayer.AdvertOwnerType), "Advert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Advert), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Advert_CreditType", "CreditType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBLayer.CreditType), "Advert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Advert), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Advert_DeedType", "DeedType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBLayer.DeedType), "Advert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Advert), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Advert_FuelType", "FuelType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBLayer.FuelType), "Advert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Advert), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Advert_AdvertStatus", "AdvertStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBLayer.AdvertStatus), "Advert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Advert), true)]
[assembly: EdmRelationshipAttribute("RealEstateModel", "FK_Advert_AdvertUsingType", "AdvertUsingType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBLayer.AdvertUsingType), "Advert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBLayer.Advert), true)]

#endregion

namespace DBLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RealEstateEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RealEstateEntities object using the connection string found in the 'RealEstateEntities' section of the application configuration file.
        /// </summary>
        public RealEstateEntities() : base("name=RealEstateEntities", "RealEstateEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RealEstateEntities object.
        /// </summary>
        public RealEstateEntities(string connectionString) : base(connectionString, "RealEstateEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RealEstateEntities object.
        /// </summary>
        public RealEstateEntities(EntityConnection connection) : base(connection, "RealEstateEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountType> AccountType
        {
            get
            {
                if ((_AccountType == null))
                {
                    _AccountType = base.CreateObjectSet<AccountType>("AccountType");
                }
                return _AccountType;
            }
        }
        private ObjectSet<AccountType> _AccountType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdvertFeatureRelation> AdvertFeatureRelation
        {
            get
            {
                if ((_AdvertFeatureRelation == null))
                {
                    _AdvertFeatureRelation = base.CreateObjectSet<AdvertFeatureRelation>("AdvertFeatureRelation");
                }
                return _AdvertFeatureRelation;
            }
        }
        private ObjectSet<AdvertFeatureRelation> _AdvertFeatureRelation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdvertType> AdvertType
        {
            get
            {
                if ((_AdvertType == null))
                {
                    _AdvertType = base.CreateObjectSet<AdvertType>("AdvertType");
                }
                return _AdvertType;
            }
        }
        private ObjectSet<AdvertType> _AdvertType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> City
        {
            get
            {
                if ((_City == null))
                {
                    _City = base.CreateObjectSet<City>("City");
                }
                return _City;
            }
        }
        private ObjectSet<City> _City;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currency> Currency
        {
            get
            {
                if ((_Currency == null))
                {
                    _Currency = base.CreateObjectSet<Currency>("Currency");
                }
                return _Currency;
            }
        }
        private ObjectSet<Currency> _Currency;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<District> District
        {
            get
            {
                if ((_District == null))
                {
                    _District = base.CreateObjectSet<District>("District");
                }
                return _District;
            }
        }
        private ObjectSet<District> _District;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EstateType> EstateType
        {
            get
            {
                if ((_EstateType == null))
                {
                    _EstateType = base.CreateObjectSet<EstateType>("EstateType");
                }
                return _EstateType;
            }
        }
        private ObjectSet<EstateType> _EstateType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Feature> Feature
        {
            get
            {
                if ((_Feature == null))
                {
                    _Feature = base.CreateObjectSet<Feature>("Feature");
                }
                return _Feature;
            }
        }
        private ObjectSet<Feature> _Feature;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeatureType> FeatureType
        {
            get
            {
                if ((_FeatureType == null))
                {
                    _FeatureType = base.CreateObjectSet<FeatureType>("FeatureType");
                }
                return _FeatureType;
            }
        }
        private ObjectSet<FeatureType> _FeatureType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Floor> Floor
        {
            get
            {
                if ((_Floor == null))
                {
                    _Floor = base.CreateObjectSet<Floor>("Floor");
                }
                return _Floor;
            }
        }
        private ObjectSet<Floor> _Floor;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HeatingType> HeatingType
        {
            get
            {
                if ((_HeatingType == null))
                {
                    _HeatingType = base.CreateObjectSet<HeatingType>("HeatingType");
                }
                return _HeatingType;
            }
        }
        private ObjectSet<HeatingType> _HeatingType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> Person
        {
            get
            {
                if ((_Person == null))
                {
                    _Person = base.CreateObjectSet<Person>("Person");
                }
                return _Person;
            }
        }
        private ObjectSet<Person> _Person;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Town> Town
        {
            get
            {
                if ((_Town == null))
                {
                    _Town = base.CreateObjectSet<Town>("Town");
                }
                return _Town;
            }
        }
        private ObjectSet<Town> _Town;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdvertPhoto> AdvertPhoto
        {
            get
            {
                if ((_AdvertPhoto == null))
                {
                    _AdvertPhoto = base.CreateObjectSet<AdvertPhoto>("AdvertPhoto");
                }
                return _AdvertPhoto;
            }
        }
        private ObjectSet<AdvertPhoto> _AdvertPhoto;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MarketingType> MarketingType
        {
            get
            {
                if ((_MarketingType == null))
                {
                    _MarketingType = base.CreateObjectSet<MarketingType>("MarketingType");
                }
                return _MarketingType;
            }
        }
        private ObjectSet<MarketingType> _MarketingType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoomHall> RoomHall
        {
            get
            {
                if ((_RoomHall == null))
                {
                    _RoomHall = base.CreateObjectSet<RoomHall>("RoomHall");
                }
                return _RoomHall;
            }
        }
        private ObjectSet<RoomHall> _RoomHall;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Advert> Advert
        {
            get
            {
                if ((_Advert == null))
                {
                    _Advert = base.CreateObjectSet<Advert>("Advert");
                }
                return _Advert;
            }
        }
        private ObjectSet<Advert> _Advert;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdvertOwnerType> AdvertOwnerType
        {
            get
            {
                if ((_AdvertOwnerType == null))
                {
                    _AdvertOwnerType = base.CreateObjectSet<AdvertOwnerType>("AdvertOwnerType");
                }
                return _AdvertOwnerType;
            }
        }
        private ObjectSet<AdvertOwnerType> _AdvertOwnerType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CreditType> CreditType
        {
            get
            {
                if ((_CreditType == null))
                {
                    _CreditType = base.CreateObjectSet<CreditType>("CreditType");
                }
                return _CreditType;
            }
        }
        private ObjectSet<CreditType> _CreditType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeedType> DeedType
        {
            get
            {
                if ((_DeedType == null))
                {
                    _DeedType = base.CreateObjectSet<DeedType>("DeedType");
                }
                return _DeedType;
            }
        }
        private ObjectSet<DeedType> _DeedType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FuelType> FuelType
        {
            get
            {
                if ((_FuelType == null))
                {
                    _FuelType = base.CreateObjectSet<FuelType>("FuelType");
                }
                return _FuelType;
            }
        }
        private ObjectSet<FuelType> _FuelType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdvertStatus> AdvertStatus
        {
            get
            {
                if ((_AdvertStatus == null))
                {
                    _AdvertStatus = base.CreateObjectSet<AdvertStatus>("AdvertStatus");
                }
                return _AdvertStatus;
            }
        }
        private ObjectSet<AdvertStatus> _AdvertStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdvertUsingType> AdvertUsingType
        {
            get
            {
                if ((_AdvertUsingType == null))
                {
                    _AdvertUsingType = base.CreateObjectSet<AdvertUsingType>("AdvertUsingType");
                }
                return _AdvertUsingType;
            }
        }
        private ObjectSet<AdvertUsingType> _AdvertUsingType;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountType(AccountType accountType)
        {
            base.AddObject("AccountType", accountType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdvertFeatureRelation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdvertFeatureRelation(AdvertFeatureRelation advertFeatureRelation)
        {
            base.AddObject("AdvertFeatureRelation", advertFeatureRelation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdvertType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdvertType(AdvertType advertType)
        {
            base.AddObject("AdvertType", advertType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the City EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCity(City city)
        {
            base.AddObject("City", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Currency EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrency(Currency currency)
        {
            base.AddObject("Currency", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the District EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDistrict(District district)
        {
            base.AddObject("District", district);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EstateType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEstateType(EstateType estateType)
        {
            base.AddObject("EstateType", estateType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Feature EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeature(Feature feature)
        {
            base.AddObject("Feature", feature);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeatureType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeatureType(FeatureType featureType)
        {
            base.AddObject("FeatureType", featureType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Floor EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFloor(Floor floor)
        {
            base.AddObject("Floor", floor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HeatingType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHeatingType(HeatingType heatingType)
        {
            base.AddObject("HeatingType", heatingType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Person EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerson(Person person)
        {
            base.AddObject("Person", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Town EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTown(Town town)
        {
            base.AddObject("Town", town);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdvertPhoto EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdvertPhoto(AdvertPhoto advertPhoto)
        {
            base.AddObject("AdvertPhoto", advertPhoto);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MarketingType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMarketingType(MarketingType marketingType)
        {
            base.AddObject("MarketingType", marketingType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoomHall EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoomHall(RoomHall roomHall)
        {
            base.AddObject("RoomHall", roomHall);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Advert EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdvert(Advert advert)
        {
            base.AddObject("Advert", advert);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdvertOwnerType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdvertOwnerType(AdvertOwnerType advertOwnerType)
        {
            base.AddObject("AdvertOwnerType", advertOwnerType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CreditType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCreditType(CreditType creditType)
        {
            base.AddObject("CreditType", creditType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeedType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeedType(DeedType deedType)
        {
            base.AddObject("DeedType", deedType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FuelType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFuelType(FuelType fuelType)
        {
            base.AddObject("FuelType", fuelType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdvertStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdvertStatus(AdvertStatus advertStatus)
        {
            base.AddObject("AdvertStatus", advertStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdvertUsingType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdvertUsingType(AdvertUsingType advertUsingType)
        {
            base.AddObject("AdvertUsingType", advertUsingType);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="AccountType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountType object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="accountTypeName">Initial value of the AccountTypeName property.</param>
        /// <param name="accountTypeNameTR">Initial value of the AccountTypeNameTR property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static AccountType CreateAccountType(global::System.Int32 objectId, global::System.String accountTypeName, global::System.String accountTypeNameTR, global::System.Boolean deleted)
        {
            AccountType accountType = new AccountType();
            accountType.ObjectId = objectId;
            accountType.AccountTypeName = accountTypeName;
            accountType.AccountTypeNameTR = accountTypeNameTR;
            accountType.Deleted = deleted;
            return accountType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountTypeName
        {
            get
            {
                return _AccountTypeName;
            }
            set
            {
                OnAccountTypeNameChanging(value);
                ReportPropertyChanging("AccountTypeName");
                _AccountTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountTypeName");
                OnAccountTypeNameChanged();
            }
        }
        private global::System.String _AccountTypeName;
        partial void OnAccountTypeNameChanging(global::System.String value);
        partial void OnAccountTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountTypeNameTR
        {
            get
            {
                return _AccountTypeNameTR;
            }
            set
            {
                OnAccountTypeNameTRChanging(value);
                ReportPropertyChanging("AccountTypeNameTR");
                _AccountTypeNameTR = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountTypeNameTR");
                OnAccountTypeNameTRChanged();
            }
        }
        private global::System.String _AccountTypeNameTR;
        partial void OnAccountTypeNameTRChanging(global::System.String value);
        partial void OnAccountTypeNameTRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Person_AccountType", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("RealEstateModel.FK_Person_AccountType", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("RealEstateModel.FK_Person_AccountType", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="Advert")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Advert : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Advert object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="area">Initial value of the Area property.</param>
        /// <param name="age">Initial value of the Age property.</param>
        /// <param name="marketingTypeObjectId">Initial value of the MarketingTypeObjectId property.</param>
        /// <param name="estateTypeObjectId">Initial value of the EstateTypeObjectId property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="priceCurrencyObjectId">Initial value of the PriceCurrencyObjectId property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="createdByPersonObjectId">Initial value of the CreatedByPersonObjectId property.</param>
        /// <param name="advertNumber">Initial value of the AdvertNumber property.</param>
        /// <param name="districtObjectId">Initial value of the DistrictObjectId property.</param>
        /// <param name="townObjectId">Initial value of the TownObjectId property.</param>
        /// <param name="cityObjectId">Initial value of the CityObjectId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Advert CreateAdvert(global::System.Int32 objectId, global::System.String title, global::System.String description, global::System.Int32 area, global::System.Int32 age, global::System.Int32 marketingTypeObjectId, global::System.Int32 estateTypeObjectId, global::System.Int32 price, global::System.Int32 priceCurrencyObjectId, global::System.DateTime createDate, global::System.Int32 createdByPersonObjectId, global::System.String advertNumber, global::System.Int32 districtObjectId, global::System.Int32 townObjectId, global::System.Int32 cityObjectId, global::System.Boolean isActive, global::System.Boolean deleted)
        {
            Advert advert = new Advert();
            advert.ObjectId = objectId;
            advert.Title = title;
            advert.Description = description;
            advert.Area = area;
            advert.Age = age;
            advert.MarketingTypeObjectId = marketingTypeObjectId;
            advert.EstateTypeObjectId = estateTypeObjectId;
            advert.Price = price;
            advert.PriceCurrencyObjectId = priceCurrencyObjectId;
            advert.CreateDate = createDate;
            advert.CreatedByPersonObjectId = createdByPersonObjectId;
            advert.AdvertNumber = advertNumber;
            advert.DistrictObjectId = districtObjectId;
            advert.TownObjectId = townObjectId;
            advert.CityObjectId = cityObjectId;
            advert.IsActive = isActive;
            advert.Deleted = deleted;
            return advert;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Area
        {
            get
            {
                return _Area;
            }
            set
            {
                OnAreaChanging(value);
                ReportPropertyChanging("Area");
                _Area = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Area");
                OnAreaChanged();
            }
        }
        private global::System.Int32 _Area;
        partial void OnAreaChanging(global::System.Int32 value);
        partial void OnAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private global::System.Int32 _Age;
        partial void OnAgeChanging(global::System.Int32 value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HeatingTypeObjectId
        {
            get
            {
                return _HeatingTypeObjectId;
            }
            set
            {
                OnHeatingTypeObjectIdChanging(value);
                ReportPropertyChanging("HeatingTypeObjectId");
                _HeatingTypeObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HeatingTypeObjectId");
                OnHeatingTypeObjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _HeatingTypeObjectId;
        partial void OnHeatingTypeObjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnHeatingTypeObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RoomHallObjectId
        {
            get
            {
                return _RoomHallObjectId;
            }
            set
            {
                OnRoomHallObjectIdChanging(value);
                ReportPropertyChanging("RoomHallObjectId");
                _RoomHallObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomHallObjectId");
                OnRoomHallObjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RoomHallObjectId;
        partial void OnRoomHallObjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnRoomHallObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MarketingTypeObjectId
        {
            get
            {
                return _MarketingTypeObjectId;
            }
            set
            {
                OnMarketingTypeObjectIdChanging(value);
                ReportPropertyChanging("MarketingTypeObjectId");
                _MarketingTypeObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarketingTypeObjectId");
                OnMarketingTypeObjectIdChanged();
            }
        }
        private global::System.Int32 _MarketingTypeObjectId;
        partial void OnMarketingTypeObjectIdChanging(global::System.Int32 value);
        partial void OnMarketingTypeObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EstateTypeObjectId
        {
            get
            {
                return _EstateTypeObjectId;
            }
            set
            {
                OnEstateTypeObjectIdChanging(value);
                ReportPropertyChanging("EstateTypeObjectId");
                _EstateTypeObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstateTypeObjectId");
                OnEstateTypeObjectIdChanged();
            }
        }
        private global::System.Int32 _EstateTypeObjectId;
        partial void OnEstateTypeObjectIdChanging(global::System.Int32 value);
        partial void OnEstateTypeObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FloorObjectId
        {
            get
            {
                return _FloorObjectId;
            }
            set
            {
                OnFloorObjectIdChanging(value);
                ReportPropertyChanging("FloorObjectId");
                _FloorObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FloorObjectId");
                OnFloorObjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FloorObjectId;
        partial void OnFloorObjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnFloorObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdvertTypeObjectId
        {
            get
            {
                return _AdvertTypeObjectId;
            }
            set
            {
                OnAdvertTypeObjectIdChanging(value);
                ReportPropertyChanging("AdvertTypeObjectId");
                _AdvertTypeObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertTypeObjectId");
                OnAdvertTypeObjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AdvertTypeObjectId;
        partial void OnAdvertTypeObjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnAdvertTypeObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BathCount
        {
            get
            {
                return _BathCount;
            }
            set
            {
                OnBathCountChanging(value);
                ReportPropertyChanging("BathCount");
                _BathCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BathCount");
                OnBathCountChanged();
            }
        }
        private Nullable<global::System.Int32> _BathCount;
        partial void OnBathCountChanging(Nullable<global::System.Int32> value);
        partial void OnBathCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FloorCount
        {
            get
            {
                return _FloorCount;
            }
            set
            {
                OnFloorCountChanging(value);
                ReportPropertyChanging("FloorCount");
                _FloorCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FloorCount");
                OnFloorCountChanged();
            }
        }
        private Nullable<global::System.Int32> _FloorCount;
        partial void OnFloorCountChanging(Nullable<global::System.Int32> value);
        partial void OnFloorCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Deposit
        {
            get
            {
                return _Deposit;
            }
            set
            {
                OnDepositChanging(value);
                ReportPropertyChanging("Deposit");
                _Deposit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deposit");
                OnDepositChanged();
            }
        }
        private Nullable<global::System.Int32> _Deposit;
        partial void OnDepositChanging(Nullable<global::System.Int32> value);
        partial void OnDepositChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DepositCurrencyObjectId
        {
            get
            {
                return _DepositCurrencyObjectId;
            }
            set
            {
                OnDepositCurrencyObjectIdChanging(value);
                ReportPropertyChanging("DepositCurrencyObjectId");
                _DepositCurrencyObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepositCurrencyObjectId");
                OnDepositCurrencyObjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DepositCurrencyObjectId;
        partial void OnDepositCurrencyObjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnDepositCurrencyObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Int32 _Price;
        partial void OnPriceChanging(global::System.Int32 value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriceCurrencyObjectId
        {
            get
            {
                return _PriceCurrencyObjectId;
            }
            set
            {
                OnPriceCurrencyObjectIdChanging(value);
                ReportPropertyChanging("PriceCurrencyObjectId");
                _PriceCurrencyObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceCurrencyObjectId");
                OnPriceCurrencyObjectIdChanged();
            }
        }
        private global::System.Int32 _PriceCurrencyObjectId;
        partial void OnPriceCurrencyObjectIdChanging(global::System.Int32 value);
        partial void OnPriceCurrencyObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByPersonObjectId
        {
            get
            {
                return _CreatedByPersonObjectId;
            }
            set
            {
                OnCreatedByPersonObjectIdChanging(value);
                ReportPropertyChanging("CreatedByPersonObjectId");
                _CreatedByPersonObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByPersonObjectId");
                OnCreatedByPersonObjectIdChanged();
            }
        }
        private global::System.Int32 _CreatedByPersonObjectId;
        partial void OnCreatedByPersonObjectIdChanging(global::System.Int32 value);
        partial void OnCreatedByPersonObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AdvertNumber
        {
            get
            {
                return _AdvertNumber;
            }
            set
            {
                OnAdvertNumberChanging(value);
                ReportPropertyChanging("AdvertNumber");
                _AdvertNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AdvertNumber");
                OnAdvertNumberChanged();
            }
        }
        private global::System.String _AdvertNumber;
        partial void OnAdvertNumberChanging(global::System.String value);
        partial void OnAdvertNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.String _Latitude;
        partial void OnLatitudeChanging(global::System.String value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.String _Longitude;
        partial void OnLongitudeChanging(global::System.String value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GAddress
        {
            get
            {
                return _GAddress;
            }
            set
            {
                OnGAddressChanging(value);
                ReportPropertyChanging("GAddress");
                _GAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GAddress");
                OnGAddressChanged();
            }
        }
        private global::System.String _GAddress;
        partial void OnGAddressChanging(global::System.String value);
        partial void OnGAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DistrictObjectId
        {
            get
            {
                return _DistrictObjectId;
            }
            set
            {
                OnDistrictObjectIdChanging(value);
                ReportPropertyChanging("DistrictObjectId");
                _DistrictObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DistrictObjectId");
                OnDistrictObjectIdChanged();
            }
        }
        private global::System.Int32 _DistrictObjectId;
        partial void OnDistrictObjectIdChanging(global::System.Int32 value);
        partial void OnDistrictObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TownObjectId
        {
            get
            {
                return _TownObjectId;
            }
            set
            {
                OnTownObjectIdChanging(value);
                ReportPropertyChanging("TownObjectId");
                _TownObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TownObjectId");
                OnTownObjectIdChanged();
            }
        }
        private global::System.Int32 _TownObjectId;
        partial void OnTownObjectIdChanging(global::System.Int32 value);
        partial void OnTownObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityObjectId
        {
            get
            {
                return _CityObjectId;
            }
            set
            {
                OnCityObjectIdChanging(value);
                ReportPropertyChanging("CityObjectId");
                _CityObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityObjectId");
                OnCityObjectIdChanged();
            }
        }
        private global::System.Int32 _CityObjectId;
        partial void OnCityObjectIdChanging(global::System.Int32 value);
        partial void OnCityObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DistrictName
        {
            get
            {
                return _DistrictName;
            }
            set
            {
                OnDistrictNameChanging(value);
                ReportPropertyChanging("DistrictName");
                _DistrictName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DistrictName");
                OnDistrictNameChanged();
            }
        }
        private global::System.String _DistrictName;
        partial void OnDistrictNameChanging(global::System.String value);
        partial void OnDistrictNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TownName
        {
            get
            {
                return _TownName;
            }
            set
            {
                OnTownNameChanging(value);
                ReportPropertyChanging("TownName");
                _TownName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TownName");
                OnTownNameChanged();
            }
        }
        private global::System.String _TownName;
        partial void OnTownNameChanging(global::System.String value);
        partial void OnTownNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdvertOwnerTypeObjectId
        {
            get
            {
                return _AdvertOwnerTypeObjectId;
            }
            set
            {
                OnAdvertOwnerTypeObjectIdChanging(value);
                ReportPropertyChanging("AdvertOwnerTypeObjectId");
                _AdvertOwnerTypeObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertOwnerTypeObjectId");
                OnAdvertOwnerTypeObjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AdvertOwnerTypeObjectId;
        partial void OnAdvertOwnerTypeObjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnAdvertOwnerTypeObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsFlatForLandMethod
        {
            get
            {
                return _IsFlatForLandMethod;
            }
            set
            {
                OnIsFlatForLandMethodChanging(value);
                ReportPropertyChanging("IsFlatForLandMethod");
                _IsFlatForLandMethod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFlatForLandMethod");
                OnIsFlatForLandMethodChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsFlatForLandMethod;
        partial void OnIsFlatForLandMethodChanging(Nullable<global::System.Boolean> value);
        partial void OnIsFlatForLandMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreditTypeObjectId
        {
            get
            {
                return _CreditTypeObjectId;
            }
            set
            {
                OnCreditTypeObjectIdChanging(value);
                ReportPropertyChanging("CreditTypeObjectId");
                _CreditTypeObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditTypeObjectId");
                OnCreditTypeObjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreditTypeObjectId;
        partial void OnCreditTypeObjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreditTypeObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeedTypeObjectId
        {
            get
            {
                return _DeedTypeObjectId;
            }
            set
            {
                OnDeedTypeObjectIdChanging(value);
                ReportPropertyChanging("DeedTypeObjectId");
                _DeedTypeObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeedTypeObjectId");
                OnDeedTypeObjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeedTypeObjectId;
        partial void OnDeedTypeObjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeedTypeObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsExchangable
        {
            get
            {
                return _IsExchangable;
            }
            set
            {
                OnIsExchangableChanging(value);
                ReportPropertyChanging("IsExchangable");
                _IsExchangable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExchangable");
                OnIsExchangableChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsExchangable;
        partial void OnIsExchangableChanging(Nullable<global::System.Boolean> value);
        partial void OnIsExchangableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FuelTypeObjectId
        {
            get
            {
                return _FuelTypeObjectId;
            }
            set
            {
                OnFuelTypeObjectIdChanging(value);
                ReportPropertyChanging("FuelTypeObjectId");
                _FuelTypeObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FuelTypeObjectId");
                OnFuelTypeObjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FuelTypeObjectId;
        partial void OnFuelTypeObjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnFuelTypeObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSublease
        {
            get
            {
                return _IsSublease;
            }
            set
            {
                OnIsSubleaseChanging(value);
                ReportPropertyChanging("IsSublease");
                _IsSublease = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSublease");
                OnIsSubleaseChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSublease;
        partial void OnIsSubleaseChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSubleaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdvertStatusObjectId
        {
            get
            {
                return _AdvertStatusObjectId;
            }
            set
            {
                OnAdvertStatusObjectIdChanging(value);
                ReportPropertyChanging("AdvertStatusObjectId");
                _AdvertStatusObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertStatusObjectId");
                OnAdvertStatusObjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AdvertStatusObjectId;
        partial void OnAdvertStatusObjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnAdvertStatusObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdvertUsingTypeObjectId
        {
            get
            {
                return _AdvertUsingTypeObjectId;
            }
            set
            {
                OnAdvertUsingTypeObjectIdChanging(value);
                ReportPropertyChanging("AdvertUsingTypeObjectId");
                _AdvertUsingTypeObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertUsingTypeObjectId");
                OnAdvertUsingTypeObjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AdvertUsingTypeObjectId;
        partial void OnAdvertUsingTypeObjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnAdvertUsingTypeObjectIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_AdvertType", "AdvertType")]
        public AdvertType AdvertType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdvertType>("RealEstateModel.FK_Advert_AdvertType", "AdvertType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdvertType>("RealEstateModel.FK_Advert_AdvertType", "AdvertType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdvertType> AdvertTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdvertType>("RealEstateModel.FK_Advert_AdvertType", "AdvertType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdvertType>("RealEstateModel.FK_Advert_AdvertType", "AdvertType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_Currency", "Currency")]
        public Currency DepositCurrency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("RealEstateModel.FK_Advert_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("RealEstateModel.FK_Advert_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> DepositCurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("RealEstateModel.FK_Advert_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("RealEstateModel.FK_Advert_Currency", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_Currency1", "Currency")]
        public Currency PriceCurrency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("RealEstateModel.FK_Advert_Currency1", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("RealEstateModel.FK_Advert_Currency1", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> PriceCurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("RealEstateModel.FK_Advert_Currency1", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("RealEstateModel.FK_Advert_Currency1", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_District", "District")]
        public District District
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("RealEstateModel.FK_Advert_District", "District").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("RealEstateModel.FK_Advert_District", "District").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<District> DistrictReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("RealEstateModel.FK_Advert_District", "District");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<District>("RealEstateModel.FK_Advert_District", "District", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_EstateType", "EstateType")]
        public EstateType EstateType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EstateType>("RealEstateModel.FK_Advert_EstateType", "EstateType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EstateType>("RealEstateModel.FK_Advert_EstateType", "EstateType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EstateType> EstateTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EstateType>("RealEstateModel.FK_Advert_EstateType", "EstateType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EstateType>("RealEstateModel.FK_Advert_EstateType", "EstateType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_Floor", "Floor")]
        public Floor Floor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Floor>("RealEstateModel.FK_Advert_Floor", "Floor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Floor>("RealEstateModel.FK_Advert_Floor", "Floor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Floor> FloorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Floor>("RealEstateModel.FK_Advert_Floor", "Floor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Floor>("RealEstateModel.FK_Advert_Floor", "Floor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_HeatingType", "HeatingType")]
        public HeatingType HeatingType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HeatingType>("RealEstateModel.FK_Advert_HeatingType", "HeatingType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HeatingType>("RealEstateModel.FK_Advert_HeatingType", "HeatingType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HeatingType> HeatingTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HeatingType>("RealEstateModel.FK_Advert_HeatingType", "HeatingType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HeatingType>("RealEstateModel.FK_Advert_HeatingType", "HeatingType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_MarketingType", "MarketingType")]
        public MarketingType MarketingType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MarketingType>("RealEstateModel.FK_Advert_MarketingType", "MarketingType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MarketingType>("RealEstateModel.FK_Advert_MarketingType", "MarketingType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MarketingType> MarketingTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MarketingType>("RealEstateModel.FK_Advert_MarketingType", "MarketingType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MarketingType>("RealEstateModel.FK_Advert_MarketingType", "MarketingType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("RealEstateModel.FK_Advert_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("RealEstateModel.FK_Advert_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("RealEstateModel.FK_Advert_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("RealEstateModel.FK_Advert_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_RoomHall", "RoomHall")]
        public RoomHall RoomHall
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomHall>("RealEstateModel.FK_Advert_RoomHall", "RoomHall").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomHall>("RealEstateModel.FK_Advert_RoomHall", "RoomHall").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RoomHall> RoomHallReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomHall>("RealEstateModel.FK_Advert_RoomHall", "RoomHall");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RoomHall>("RealEstateModel.FK_Advert_RoomHall", "RoomHall", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_AdvertFeatureRelation_Advert", "AdvertFeatureRelation")]
        public EntityCollection<AdvertFeatureRelation> AdvertFeatureRelation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdvertFeatureRelation>("RealEstateModel.FK_AdvertFeatureRelation_Advert", "AdvertFeatureRelation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdvertFeatureRelation>("RealEstateModel.FK_AdvertFeatureRelation_Advert", "AdvertFeatureRelation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_AdvertPhoto_Advert", "AdvertPhoto")]
        public EntityCollection<AdvertPhoto> AdvertPhoto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdvertPhoto>("RealEstateModel.FK_AdvertPhoto_Advert", "AdvertPhoto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdvertPhoto>("RealEstateModel.FK_AdvertPhoto_Advert", "AdvertPhoto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_AdvertOwnerType", "AdvertOwnerType")]
        public AdvertOwnerType AdvertOwnerType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdvertOwnerType>("RealEstateModel.FK_Advert_AdvertOwnerType", "AdvertOwnerType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdvertOwnerType>("RealEstateModel.FK_Advert_AdvertOwnerType", "AdvertOwnerType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdvertOwnerType> AdvertOwnerTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdvertOwnerType>("RealEstateModel.FK_Advert_AdvertOwnerType", "AdvertOwnerType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdvertOwnerType>("RealEstateModel.FK_Advert_AdvertOwnerType", "AdvertOwnerType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_CreditType", "CreditType")]
        public CreditType CreditType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CreditType>("RealEstateModel.FK_Advert_CreditType", "CreditType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CreditType>("RealEstateModel.FK_Advert_CreditType", "CreditType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CreditType> CreditTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CreditType>("RealEstateModel.FK_Advert_CreditType", "CreditType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CreditType>("RealEstateModel.FK_Advert_CreditType", "CreditType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_DeedType", "DeedType")]
        public DeedType DeedType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeedType>("RealEstateModel.FK_Advert_DeedType", "DeedType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeedType>("RealEstateModel.FK_Advert_DeedType", "DeedType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DeedType> DeedTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeedType>("RealEstateModel.FK_Advert_DeedType", "DeedType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DeedType>("RealEstateModel.FK_Advert_DeedType", "DeedType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_FuelType", "FuelType")]
        public FuelType FuelType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FuelType>("RealEstateModel.FK_Advert_FuelType", "FuelType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FuelType>("RealEstateModel.FK_Advert_FuelType", "FuelType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FuelType> FuelTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FuelType>("RealEstateModel.FK_Advert_FuelType", "FuelType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FuelType>("RealEstateModel.FK_Advert_FuelType", "FuelType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_AdvertStatus", "AdvertStatus")]
        public AdvertStatus AdvertStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdvertStatus>("RealEstateModel.FK_Advert_AdvertStatus", "AdvertStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdvertStatus>("RealEstateModel.FK_Advert_AdvertStatus", "AdvertStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdvertStatus> AdvertStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdvertStatus>("RealEstateModel.FK_Advert_AdvertStatus", "AdvertStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdvertStatus>("RealEstateModel.FK_Advert_AdvertStatus", "AdvertStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_AdvertUsingType", "AdvertUsingType")]
        public AdvertUsingType AdvertUsingType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdvertUsingType>("RealEstateModel.FK_Advert_AdvertUsingType", "AdvertUsingType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdvertUsingType>("RealEstateModel.FK_Advert_AdvertUsingType", "AdvertUsingType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdvertUsingType> AdvertUsingTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdvertUsingType>("RealEstateModel.FK_Advert_AdvertUsingType", "AdvertUsingType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdvertUsingType>("RealEstateModel.FK_Advert_AdvertUsingType", "AdvertUsingType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="AdvertFeatureRelation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdvertFeatureRelation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdvertFeatureRelation object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="advertObjectId">Initial value of the AdvertObjectId property.</param>
        /// <param name="featureObjectId">Initial value of the FeatureObjectId property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static AdvertFeatureRelation CreateAdvertFeatureRelation(global::System.Int32 objectId, global::System.Int32 advertObjectId, global::System.Int32 featureObjectId, global::System.Boolean deleted)
        {
            AdvertFeatureRelation advertFeatureRelation = new AdvertFeatureRelation();
            advertFeatureRelation.ObjectId = objectId;
            advertFeatureRelation.AdvertObjectId = advertObjectId;
            advertFeatureRelation.FeatureObjectId = featureObjectId;
            advertFeatureRelation.Deleted = deleted;
            return advertFeatureRelation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdvertObjectId
        {
            get
            {
                return _AdvertObjectId;
            }
            set
            {
                OnAdvertObjectIdChanging(value);
                ReportPropertyChanging("AdvertObjectId");
                _AdvertObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertObjectId");
                OnAdvertObjectIdChanged();
            }
        }
        private global::System.Int32 _AdvertObjectId;
        partial void OnAdvertObjectIdChanging(global::System.Int32 value);
        partial void OnAdvertObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FeatureObjectId
        {
            get
            {
                return _FeatureObjectId;
            }
            set
            {
                OnFeatureObjectIdChanging(value);
                ReportPropertyChanging("FeatureObjectId");
                _FeatureObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeatureObjectId");
                OnFeatureObjectIdChanged();
            }
        }
        private global::System.Int32 _FeatureObjectId;
        partial void OnFeatureObjectIdChanging(global::System.Int32 value);
        partial void OnFeatureObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_AdvertFeatureRelation_Feature", "Feature")]
        public Feature Feature
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Feature>("RealEstateModel.FK_AdvertFeatureRelation_Feature", "Feature").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Feature>("RealEstateModel.FK_AdvertFeatureRelation_Feature", "Feature").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Feature> FeatureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Feature>("RealEstateModel.FK_AdvertFeatureRelation_Feature", "Feature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Feature>("RealEstateModel.FK_AdvertFeatureRelation_Feature", "Feature", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_AdvertFeatureRelation_Advert", "Advert")]
        public Advert Advert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Advert>("RealEstateModel.FK_AdvertFeatureRelation_Advert", "Advert").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Advert>("RealEstateModel.FK_AdvertFeatureRelation_Advert", "Advert").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Advert> AdvertReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Advert>("RealEstateModel.FK_AdvertFeatureRelation_Advert", "Advert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Advert>("RealEstateModel.FK_AdvertFeatureRelation_Advert", "Advert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="AdvertOwnerType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdvertOwnerType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdvertOwnerType object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static AdvertOwnerType CreateAdvertOwnerType(global::System.Int32 objectId, global::System.String typeName, global::System.Boolean deleted)
        {
            AdvertOwnerType advertOwnerType = new AdvertOwnerType();
            advertOwnerType.ObjectId = objectId;
            advertOwnerType.TypeName = typeName;
            advertOwnerType.Deleted = deleted;
            return advertOwnerType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeKey
        {
            get
            {
                return _TypeKey;
            }
            set
            {
                OnTypeKeyChanging(value);
                ReportPropertyChanging("TypeKey");
                _TypeKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeKey");
                OnTypeKeyChanged();
            }
        }
        private global::System.String _TypeKey;
        partial void OnTypeKeyChanging(global::System.String value);
        partial void OnTypeKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_AdvertOwnerType", "Advert")]
        public EntityCollection<Advert> Advert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Advert>("RealEstateModel.FK_Advert_AdvertOwnerType", "Advert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Advert>("RealEstateModel.FK_Advert_AdvertOwnerType", "Advert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="AdvertPhoto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdvertPhoto : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdvertPhoto object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="photoName">Initial value of the PhotoName property.</param>
        /// <param name="advertObjectId">Initial value of the AdvertObjectId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static AdvertPhoto CreateAdvertPhoto(global::System.Int32 objectId, global::System.String photoName, global::System.Int32 advertObjectId, global::System.Int32 sortOrder, global::System.Boolean deleted)
        {
            AdvertPhoto advertPhoto = new AdvertPhoto();
            advertPhoto.ObjectId = objectId;
            advertPhoto.PhotoName = photoName;
            advertPhoto.AdvertObjectId = advertObjectId;
            advertPhoto.SortOrder = sortOrder;
            advertPhoto.Deleted = deleted;
            return advertPhoto;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhotoName
        {
            get
            {
                return _PhotoName;
            }
            set
            {
                OnPhotoNameChanging(value);
                ReportPropertyChanging("PhotoName");
                _PhotoName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhotoName");
                OnPhotoNameChanged();
            }
        }
        private global::System.String _PhotoName;
        partial void OnPhotoNameChanging(global::System.String value);
        partial void OnPhotoNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdvertObjectId
        {
            get
            {
                return _AdvertObjectId;
            }
            set
            {
                OnAdvertObjectIdChanging(value);
                ReportPropertyChanging("AdvertObjectId");
                _AdvertObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdvertObjectId");
                OnAdvertObjectIdChanged();
            }
        }
        private global::System.Int32 _AdvertObjectId;
        partial void OnAdvertObjectIdChanging(global::System.Int32 value);
        partial void OnAdvertObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SmallPhotoName
        {
            get
            {
                return _SmallPhotoName;
            }
            set
            {
                OnSmallPhotoNameChanging(value);
                ReportPropertyChanging("SmallPhotoName");
                _SmallPhotoName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SmallPhotoName");
                OnSmallPhotoNameChanged();
            }
        }
        private global::System.String _SmallPhotoName;
        partial void OnSmallPhotoNameChanging(global::System.String value);
        partial void OnSmallPhotoNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_AdvertPhoto_Advert", "Advert")]
        public Advert Advert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Advert>("RealEstateModel.FK_AdvertPhoto_Advert", "Advert").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Advert>("RealEstateModel.FK_AdvertPhoto_Advert", "Advert").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Advert> AdvertReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Advert>("RealEstateModel.FK_AdvertPhoto_Advert", "Advert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Advert>("RealEstateModel.FK_AdvertPhoto_Advert", "Advert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="AdvertStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdvertStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdvertStatus object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static AdvertStatus CreateAdvertStatus(global::System.Int32 objectId, global::System.String typeName, global::System.Boolean deleted)
        {
            AdvertStatus advertStatus = new AdvertStatus();
            advertStatus.ObjectId = objectId;
            advertStatus.TypeName = typeName;
            advertStatus.Deleted = deleted;
            return advertStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeKey
        {
            get
            {
                return _TypeKey;
            }
            set
            {
                OnTypeKeyChanging(value);
                ReportPropertyChanging("TypeKey");
                _TypeKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeKey");
                OnTypeKeyChanged();
            }
        }
        private global::System.String _TypeKey;
        partial void OnTypeKeyChanging(global::System.String value);
        partial void OnTypeKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_AdvertStatus", "Advert")]
        public EntityCollection<Advert> Advert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Advert>("RealEstateModel.FK_Advert_AdvertStatus", "Advert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Advert>("RealEstateModel.FK_Advert_AdvertStatus", "Advert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="AdvertType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdvertType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdvertType object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static AdvertType CreateAdvertType(global::System.Int32 objectId, global::System.String typeName, global::System.Boolean deleted)
        {
            AdvertType advertType = new AdvertType();
            advertType.ObjectId = objectId;
            advertType.TypeName = typeName;
            advertType.Deleted = deleted;
            return advertType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_AdvertType", "Advert")]
        public EntityCollection<Advert> Advert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Advert>("RealEstateModel.FK_Advert_AdvertType", "Advert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Advert>("RealEstateModel.FK_Advert_AdvertType", "Advert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="AdvertUsingType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdvertUsingType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdvertUsingType object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static AdvertUsingType CreateAdvertUsingType(global::System.Int32 objectId, global::System.String typeName, global::System.Boolean deleted)
        {
            AdvertUsingType advertUsingType = new AdvertUsingType();
            advertUsingType.ObjectId = objectId;
            advertUsingType.TypeName = typeName;
            advertUsingType.Deleted = deleted;
            return advertUsingType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeKey
        {
            get
            {
                return _TypeKey;
            }
            set
            {
                OnTypeKeyChanging(value);
                ReportPropertyChanging("TypeKey");
                _TypeKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeKey");
                OnTypeKeyChanged();
            }
        }
        private global::System.String _TypeKey;
        partial void OnTypeKeyChanging(global::System.String value);
        partial void OnTypeKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_AdvertUsingType", "Advert")]
        public EntityCollection<Advert> Advert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Advert>("RealEstateModel.FK_Advert_AdvertUsingType", "Advert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Advert>("RealEstateModel.FK_Advert_AdvertUsingType", "Advert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="cityName">Initial value of the CityName property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static City CreateCity(global::System.Int32 objectId, global::System.String cityName, global::System.Int32 sortOrder, global::System.Boolean deleted)
        {
            City city = new City();
            city.ObjectId = objectId;
            city.CityName = cityName;
            city.SortOrder = sortOrder;
            city.Deleted = deleted;
            return city;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Town_City", "Town")]
        public EntityCollection<Town> Town
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Town>("RealEstateModel.FK_Town_City", "Town");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Town>("RealEstateModel.FK_Town_City", "Town", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="CreditType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CreditType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CreditType object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static CreditType CreateCreditType(global::System.Int32 objectId, global::System.String typeName, global::System.Boolean deleted)
        {
            CreditType creditType = new CreditType();
            creditType.ObjectId = objectId;
            creditType.TypeName = typeName;
            creditType.Deleted = deleted;
            return creditType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeKey
        {
            get
            {
                return _TypeKey;
            }
            set
            {
                OnTypeKeyChanging(value);
                ReportPropertyChanging("TypeKey");
                _TypeKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeKey");
                OnTypeKeyChanged();
            }
        }
        private global::System.String _TypeKey;
        partial void OnTypeKeyChanging(global::System.String value);
        partial void OnTypeKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_CreditType", "Advert")]
        public EntityCollection<Advert> Advert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Advert>("RealEstateModel.FK_Advert_CreditType", "Advert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Advert>("RealEstateModel.FK_Advert_CreditType", "Advert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="Currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Currency object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="currencyName">Initial value of the CurrencyName property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Currency CreateCurrency(global::System.Int32 objectId, global::System.String currencyName, global::System.Boolean deleted)
        {
            Currency currency = new Currency();
            currency.ObjectId = objectId;
            currency.CurrencyName = currencyName;
            currency.Deleted = deleted;
            return currency;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrencyName
        {
            get
            {
                return _CurrencyName;
            }
            set
            {
                OnCurrencyNameChanging(value);
                ReportPropertyChanging("CurrencyName");
                _CurrencyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CurrencyName");
                OnCurrencyNameChanged();
            }
        }
        private global::System.String _CurrencyName;
        partial void OnCurrencyNameChanging(global::System.String value);
        partial void OnCurrencyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_Currency", "Advert")]
        public EntityCollection<Advert> Advert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Advert>("RealEstateModel.FK_Advert_Currency", "Advert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Advert>("RealEstateModel.FK_Advert_Currency", "Advert", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_Currency1", "Advert")]
        public EntityCollection<Advert> Advert1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Advert>("RealEstateModel.FK_Advert_Currency1", "Advert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Advert>("RealEstateModel.FK_Advert_Currency1", "Advert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="DeedType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeedType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeedType object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static DeedType CreateDeedType(global::System.Int32 objectId, global::System.String typeName, global::System.Boolean deleted)
        {
            DeedType deedType = new DeedType();
            deedType.ObjectId = objectId;
            deedType.TypeName = typeName;
            deedType.Deleted = deleted;
            return deedType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeKey
        {
            get
            {
                return _TypeKey;
            }
            set
            {
                OnTypeKeyChanging(value);
                ReportPropertyChanging("TypeKey");
                _TypeKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeKey");
                OnTypeKeyChanged();
            }
        }
        private global::System.String _TypeKey;
        partial void OnTypeKeyChanging(global::System.String value);
        partial void OnTypeKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_DeedType", "Advert")]
        public EntityCollection<Advert> Advert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Advert>("RealEstateModel.FK_Advert_DeedType", "Advert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Advert>("RealEstateModel.FK_Advert_DeedType", "Advert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="District")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class District : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new District object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="districtName">Initial value of the DistrictName property.</param>
        /// <param name="townObjectId">Initial value of the TownObjectId property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static District CreateDistrict(global::System.Int32 objectId, global::System.String districtName, global::System.Int32 townObjectId, global::System.Boolean deleted)
        {
            District district = new District();
            district.ObjectId = objectId;
            district.DistrictName = districtName;
            district.TownObjectId = townObjectId;
            district.Deleted = deleted;
            return district;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DistrictName
        {
            get
            {
                return _DistrictName;
            }
            set
            {
                OnDistrictNameChanging(value);
                ReportPropertyChanging("DistrictName");
                _DistrictName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DistrictName");
                OnDistrictNameChanged();
            }
        }
        private global::System.String _DistrictName;
        partial void OnDistrictNameChanging(global::System.String value);
        partial void OnDistrictNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TownObjectId
        {
            get
            {
                return _TownObjectId;
            }
            set
            {
                OnTownObjectIdChanging(value);
                ReportPropertyChanging("TownObjectId");
                _TownObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TownObjectId");
                OnTownObjectIdChanged();
            }
        }
        private global::System.Int32 _TownObjectId;
        partial void OnTownObjectIdChanging(global::System.Int32 value);
        partial void OnTownObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_District_Town", "Town")]
        public Town Town
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Town>("RealEstateModel.FK_District_Town", "Town").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Town>("RealEstateModel.FK_District_Town", "Town").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Town> TownReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Town>("RealEstateModel.FK_District_Town", "Town");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Town>("RealEstateModel.FK_District_Town", "Town", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_District", "Advert")]
        public EntityCollection<Advert> Advert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Advert>("RealEstateModel.FK_Advert_District", "Advert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Advert>("RealEstateModel.FK_Advert_District", "Advert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="EstateType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EstateType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EstateType object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        /// <param name="typeKey">Initial value of the TypeKey property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static EstateType CreateEstateType(global::System.Int32 objectId, global::System.String typeName, global::System.String typeKey, global::System.Boolean deleted)
        {
            EstateType estateType = new EstateType();
            estateType.ObjectId = objectId;
            estateType.TypeName = typeName;
            estateType.TypeKey = typeKey;
            estateType.Deleted = deleted;
            return estateType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeKey
        {
            get
            {
                return _TypeKey;
            }
            set
            {
                OnTypeKeyChanging(value);
                ReportPropertyChanging("TypeKey");
                _TypeKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeKey");
                OnTypeKeyChanged();
            }
        }
        private global::System.String _TypeKey;
        partial void OnTypeKeyChanging(global::System.String value);
        partial void OnTypeKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentEstateTypeObjectId
        {
            get
            {
                return _ParentEstateTypeObjectId;
            }
            set
            {
                OnParentEstateTypeObjectIdChanging(value);
                ReportPropertyChanging("ParentEstateTypeObjectId");
                _ParentEstateTypeObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentEstateTypeObjectId");
                OnParentEstateTypeObjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentEstateTypeObjectId;
        partial void OnParentEstateTypeObjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentEstateTypeObjectIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_EstateType_EstateType", "EstateType1")]
        public EntityCollection<EstateType> ChildEstateTypeList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EstateType>("RealEstateModel.FK_EstateType_EstateType", "EstateType1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EstateType>("RealEstateModel.FK_EstateType_EstateType", "EstateType1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_EstateType_EstateType", "EstateType")]
        public EstateType ParentEstateType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EstateType>("RealEstateModel.FK_EstateType_EstateType", "EstateType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EstateType>("RealEstateModel.FK_EstateType_EstateType", "EstateType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EstateType> ParentEstateTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EstateType>("RealEstateModel.FK_EstateType_EstateType", "EstateType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EstateType>("RealEstateModel.FK_EstateType_EstateType", "EstateType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_EstateType", "Advert")]
        public EntityCollection<Advert> Advert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Advert>("RealEstateModel.FK_Advert_EstateType", "Advert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Advert>("RealEstateModel.FK_Advert_EstateType", "Advert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="Feature")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Feature : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Feature object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="featureName">Initial value of the FeatureName property.</param>
        /// <param name="featureKey">Initial value of the FeatureKey property.</param>
        /// <param name="featureTypeObjectId">Initial value of the FeatureTypeObjectId property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Feature CreateFeature(global::System.Int32 objectId, global::System.String featureName, global::System.String featureKey, global::System.Int32 featureTypeObjectId, global::System.Boolean deleted)
        {
            Feature feature = new Feature();
            feature.ObjectId = objectId;
            feature.FeatureName = featureName;
            feature.FeatureKey = featureKey;
            feature.FeatureTypeObjectId = featureTypeObjectId;
            feature.Deleted = deleted;
            return feature;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FeatureName
        {
            get
            {
                return _FeatureName;
            }
            set
            {
                OnFeatureNameChanging(value);
                ReportPropertyChanging("FeatureName");
                _FeatureName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FeatureName");
                OnFeatureNameChanged();
            }
        }
        private global::System.String _FeatureName;
        partial void OnFeatureNameChanging(global::System.String value);
        partial void OnFeatureNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FeatureKey
        {
            get
            {
                return _FeatureKey;
            }
            set
            {
                OnFeatureKeyChanging(value);
                ReportPropertyChanging("FeatureKey");
                _FeatureKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FeatureKey");
                OnFeatureKeyChanged();
            }
        }
        private global::System.String _FeatureKey;
        partial void OnFeatureKeyChanging(global::System.String value);
        partial void OnFeatureKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FeatureTypeObjectId
        {
            get
            {
                return _FeatureTypeObjectId;
            }
            set
            {
                OnFeatureTypeObjectIdChanging(value);
                ReportPropertyChanging("FeatureTypeObjectId");
                _FeatureTypeObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeatureTypeObjectId");
                OnFeatureTypeObjectIdChanged();
            }
        }
        private global::System.Int32 _FeatureTypeObjectId;
        partial void OnFeatureTypeObjectIdChanging(global::System.Int32 value);
        partial void OnFeatureTypeObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_AdvertFeatureRelation_Feature", "AdvertFeatureRelation")]
        public EntityCollection<AdvertFeatureRelation> AdvertFeatureRelation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdvertFeatureRelation>("RealEstateModel.FK_AdvertFeatureRelation_Feature", "AdvertFeatureRelation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdvertFeatureRelation>("RealEstateModel.FK_AdvertFeatureRelation_Feature", "AdvertFeatureRelation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Feature_FeatureType", "FeatureType")]
        public FeatureType FeatureType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeatureType>("RealEstateModel.FK_Feature_FeatureType", "FeatureType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeatureType>("RealEstateModel.FK_Feature_FeatureType", "FeatureType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FeatureType> FeatureTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FeatureType>("RealEstateModel.FK_Feature_FeatureType", "FeatureType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FeatureType>("RealEstateModel.FK_Feature_FeatureType", "FeatureType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="FeatureType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeatureType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeatureType object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static FeatureType CreateFeatureType(global::System.Int32 objectId, global::System.String typeName, global::System.Boolean deleted)
        {
            FeatureType featureType = new FeatureType();
            featureType.ObjectId = objectId;
            featureType.TypeName = typeName;
            featureType.Deleted = deleted;
            return featureType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Feature_FeatureType", "Feature")]
        public EntityCollection<Feature> Feature
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Feature>("RealEstateModel.FK_Feature_FeatureType", "Feature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Feature>("RealEstateModel.FK_Feature_FeatureType", "Feature", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="Floor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Floor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Floor object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="floorName">Initial value of the FloorName property.</param>
        /// <param name="floorKey">Initial value of the FloorKey property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Floor CreateFloor(global::System.Int32 objectId, global::System.String floorName, global::System.String floorKey, global::System.Boolean deleted)
        {
            Floor floor = new Floor();
            floor.ObjectId = objectId;
            floor.FloorName = floorName;
            floor.FloorKey = floorKey;
            floor.Deleted = deleted;
            return floor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FloorName
        {
            get
            {
                return _FloorName;
            }
            set
            {
                OnFloorNameChanging(value);
                ReportPropertyChanging("FloorName");
                _FloorName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FloorName");
                OnFloorNameChanged();
            }
        }
        private global::System.String _FloorName;
        partial void OnFloorNameChanging(global::System.String value);
        partial void OnFloorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FloorKey
        {
            get
            {
                return _FloorKey;
            }
            set
            {
                OnFloorKeyChanging(value);
                ReportPropertyChanging("FloorKey");
                _FloorKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FloorKey");
                OnFloorKeyChanged();
            }
        }
        private global::System.String _FloorKey;
        partial void OnFloorKeyChanging(global::System.String value);
        partial void OnFloorKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_Floor", "Advert")]
        public EntityCollection<Advert> Advert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Advert>("RealEstateModel.FK_Advert_Floor", "Advert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Advert>("RealEstateModel.FK_Advert_Floor", "Advert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="FuelType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FuelType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FuelType object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static FuelType CreateFuelType(global::System.Int32 objectId, global::System.String typeName, global::System.Boolean deleted)
        {
            FuelType fuelType = new FuelType();
            fuelType.ObjectId = objectId;
            fuelType.TypeName = typeName;
            fuelType.Deleted = deleted;
            return fuelType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeKey
        {
            get
            {
                return _TypeKey;
            }
            set
            {
                OnTypeKeyChanging(value);
                ReportPropertyChanging("TypeKey");
                _TypeKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeKey");
                OnTypeKeyChanged();
            }
        }
        private global::System.String _TypeKey;
        partial void OnTypeKeyChanging(global::System.String value);
        partial void OnTypeKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_FuelType", "Advert")]
        public EntityCollection<Advert> Advert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Advert>("RealEstateModel.FK_Advert_FuelType", "Advert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Advert>("RealEstateModel.FK_Advert_FuelType", "Advert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="HeatingType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HeatingType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HeatingType object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        /// <param name="typeKey">Initial value of the TypeKey property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static HeatingType CreateHeatingType(global::System.Int32 objectId, global::System.String typeName, global::System.String typeKey, global::System.Boolean deleted)
        {
            HeatingType heatingType = new HeatingType();
            heatingType.ObjectId = objectId;
            heatingType.TypeName = typeName;
            heatingType.TypeKey = typeKey;
            heatingType.Deleted = deleted;
            return heatingType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeKey
        {
            get
            {
                return _TypeKey;
            }
            set
            {
                OnTypeKeyChanging(value);
                ReportPropertyChanging("TypeKey");
                _TypeKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeKey");
                OnTypeKeyChanged();
            }
        }
        private global::System.String _TypeKey;
        partial void OnTypeKeyChanging(global::System.String value);
        partial void OnTypeKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_HeatingType", "Advert")]
        public EntityCollection<Advert> Advert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Advert>("RealEstateModel.FK_Advert_HeatingType", "Advert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Advert>("RealEstateModel.FK_Advert_HeatingType", "Advert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="MarketingType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MarketingType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MarketingType object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        /// <param name="typeKey">Initial value of the TypeKey property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static MarketingType CreateMarketingType(global::System.Int32 objectId, global::System.String typeName, global::System.String typeKey, global::System.Boolean deleted)
        {
            MarketingType marketingType = new MarketingType();
            marketingType.ObjectId = objectId;
            marketingType.TypeName = typeName;
            marketingType.TypeKey = typeKey;
            marketingType.Deleted = deleted;
            return marketingType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeKey
        {
            get
            {
                return _TypeKey;
            }
            set
            {
                OnTypeKeyChanging(value);
                ReportPropertyChanging("TypeKey");
                _TypeKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeKey");
                OnTypeKeyChanged();
            }
        }
        private global::System.String _TypeKey;
        partial void OnTypeKeyChanging(global::System.String value);
        partial void OnTypeKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_MarketingType", "Advert")]
        public EntityCollection<Advert> Advert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Advert>("RealEstateModel.FK_Advert_MarketingType", "Advert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Advert>("RealEstateModel.FK_Advert_MarketingType", "Advert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="accountTypeObjectId">Initial value of the AccountTypeObjectId property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Person CreatePerson(global::System.Int32 objectId, global::System.String firstName, global::System.String lastName, global::System.String email, global::System.String password, global::System.String phone, global::System.Boolean isActive, global::System.Int32 accountTypeObjectId, global::System.Boolean deleted)
        {
            Person person = new Person();
            person.ObjectId = objectId;
            person.FirstName = firstName;
            person.LastName = lastName;
            person.Email = email;
            person.Password = password;
            person.Phone = phone;
            person.IsActive = isActive;
            person.AccountTypeObjectId = accountTypeObjectId;
            person.Deleted = deleted;
            return person;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountTypeObjectId
        {
            get
            {
                return _AccountTypeObjectId;
            }
            set
            {
                OnAccountTypeObjectIdChanging(value);
                ReportPropertyChanging("AccountTypeObjectId");
                _AccountTypeObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountTypeObjectId");
                OnAccountTypeObjectIdChanged();
            }
        }
        private global::System.Int32 _AccountTypeObjectId;
        partial void OnAccountTypeObjectIdChanging(global::System.Int32 value);
        partial void OnAccountTypeObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Person_AccountType", "AccountType")]
        public AccountType AccountType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("RealEstateModel.FK_Person_AccountType", "AccountType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("RealEstateModel.FK_Person_AccountType", "AccountType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccountType> AccountTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("RealEstateModel.FK_Person_AccountType", "AccountType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccountType>("RealEstateModel.FK_Person_AccountType", "AccountType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_Person", "Advert")]
        public EntityCollection<Advert> Advert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Advert>("RealEstateModel.FK_Advert_Person", "Advert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Advert>("RealEstateModel.FK_Advert_Person", "Advert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="RoomHall")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoomHall : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoomHall object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="roomHallName">Initial value of the RoomHallName property.</param>
        /// <param name="roomHallKey">Initial value of the RoomHallKey property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static RoomHall CreateRoomHall(global::System.Int32 objectId, global::System.String roomHallName, global::System.String roomHallKey, global::System.Boolean deleted)
        {
            RoomHall roomHall = new RoomHall();
            roomHall.ObjectId = objectId;
            roomHall.RoomHallName = roomHallName;
            roomHall.RoomHallKey = roomHallKey;
            roomHall.Deleted = deleted;
            return roomHall;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoomHallName
        {
            get
            {
                return _RoomHallName;
            }
            set
            {
                OnRoomHallNameChanging(value);
                ReportPropertyChanging("RoomHallName");
                _RoomHallName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoomHallName");
                OnRoomHallNameChanged();
            }
        }
        private global::System.String _RoomHallName;
        partial void OnRoomHallNameChanging(global::System.String value);
        partial void OnRoomHallNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoomHallKey
        {
            get
            {
                return _RoomHallKey;
            }
            set
            {
                OnRoomHallKeyChanging(value);
                ReportPropertyChanging("RoomHallKey");
                _RoomHallKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoomHallKey");
                OnRoomHallKeyChanged();
            }
        }
        private global::System.String _RoomHallKey;
        partial void OnRoomHallKeyChanging(global::System.String value);
        partial void OnRoomHallKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Advert_RoomHall", "Advert")]
        public EntityCollection<Advert> Advert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Advert>("RealEstateModel.FK_Advert_RoomHall", "Advert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Advert>("RealEstateModel.FK_Advert_RoomHall", "Advert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RealEstateModel", Name="Town")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Town : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Town object.
        /// </summary>
        /// <param name="objectId">Initial value of the ObjectId property.</param>
        /// <param name="townName">Initial value of the TownName property.</param>
        /// <param name="cityObjectId">Initial value of the CityObjectId property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Town CreateTown(global::System.Int32 objectId, global::System.String townName, global::System.Int32 cityObjectId, global::System.Boolean deleted)
        {
            Town town = new Town();
            town.ObjectId = objectId;
            town.TownName = townName;
            town.CityObjectId = cityObjectId;
            town.Deleted = deleted;
            return town;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectId
        {
            get
            {
                return _ObjectId;
            }
            set
            {
                if (_ObjectId != value)
                {
                    OnObjectIdChanging(value);
                    ReportPropertyChanging("ObjectId");
                    _ObjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectId");
                    OnObjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectId;
        partial void OnObjectIdChanging(global::System.Int32 value);
        partial void OnObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TownName
        {
            get
            {
                return _TownName;
            }
            set
            {
                OnTownNameChanging(value);
                ReportPropertyChanging("TownName");
                _TownName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TownName");
                OnTownNameChanged();
            }
        }
        private global::System.String _TownName;
        partial void OnTownNameChanging(global::System.String value);
        partial void OnTownNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityObjectId
        {
            get
            {
                return _CityObjectId;
            }
            set
            {
                OnCityObjectIdChanging(value);
                ReportPropertyChanging("CityObjectId");
                _CityObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityObjectId");
                OnCityObjectIdChanged();
            }
        }
        private global::System.Int32 _CityObjectId;
        partial void OnCityObjectIdChanging(global::System.Int32 value);
        partial void OnCityObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_Town_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("RealEstateModel.FK_Town_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("RealEstateModel.FK_Town_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("RealEstateModel.FK_Town_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("RealEstateModel.FK_Town_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RealEstateModel", "FK_District_Town", "District")]
        public EntityCollection<District> District
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<District>("RealEstateModel.FK_District_Town", "District");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<District>("RealEstateModel.FK_District_Town", "District", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
